{"is_source_file": true, "format": "Python", "description": "This Python source file implements core logic for a Tic-Tac-Toe game, including game state management, move handling, win/draw detection, and a simple in-memory game store.", "external_files": [], "external_methods": ["uuid.uuid4"], "published": ["new_board", "Game", "GameStore", "store"], "classes": [{"name": "Game", "description": "Represents a Tic-Tac-Toe game, managing the game state, moves, win/draw conditions, and serialization to dictionary."}, {"name": "GameStore", "description": "Manages multiple Game instances in an in-memory store, allowing creation, retrieval, and listing of games."}], "methods": [{"name": "List[List[str]] new_board()", "description": "Initializes and returns a new 3x3 Tic-Tac-Toe board.", "scope": "", "scopeKind": ""}, {"name": "Game.__init__", "description": "Constructor that initializes a new game with unique ID, starting board, current player, game status, and move count."}, {"name": "Game.make_move", "description": "Attempts to make a move at the specified row and column; updates game state, checks for win/draw, and switches players."}, {"name": "Game.check_win", "description": "Checks whether the specified player has achieved a winning condition on the current board."}, {"name": "Game.to_dict", "description": "Converts the current game state into a dictionary suitable for API response."}, {"name": "GameStore.__init__", "description": "Initializes an empty store to hold multiple game instances."}, {"name": "GameStore.create_game", "description": "Creates a new Game instance, stores it, and returns it."}, {"name": "GameStore.get_game", "description": "Retrieves a game by its ID from the store."}, {"name": "GameStore.list_games", "description": "Returns a list of all stored games in dictionary form."}, {"name": "__init__(self)", "scope": "GameStore", "scopeKind": "class", "description": "unavailable"}, {"name": "bool check_win(self, player: str)", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "Game create_game(self)", "scope": "GameStore", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[Game] get_game(self, game_id: str)", "scope": "GameStore", "scopeKind": "class", "description": "unavailable"}, {"name": "List[Dict[str,Any]] list_games(self)", "scope": "GameStore", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str,Any] make_move(self, row: int, col: int)", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "Dict[str,Any] to_dict(self)", "scope": "Game", "scopeKind": "class", "description": "unavailable"}], "calls": ["uuid.uuid4", "self.check_win", "self.to_dict"], "search-terms": ["tic tac toe game logic", "move validation", "win condition check", "game store", "in-memory game management"], "state": 2, "file_id": 10, "knowledge_revision": 21, "git_revision": "", "ctags": [{"_type": "tag", "name": "Game", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-fullstack-application-285ba9d3/tic_tac_backend/src/api/game_logic.py", "pattern": "/^class Game:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "GameStore", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-fullstack-application-285ba9d3/tic_tac_backend/src/api/game_logic.py", "pattern": "/^class GameStore:$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-fullstack-application-285ba9d3/tic_tac_backend/src/api/game_logic.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "__init__", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-fullstack-application-285ba9d3/tic_tac_backend/src/api/game_logic.py", "pattern": "/^    def __init__(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "GameStore", "scopeKind": "class"}, {"_type": "tag", "name": "check_win", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-fullstack-application-285ba9d3/tic_tac_backend/src/api/game_logic.py", "pattern": "/^    def check_win(self, player: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "member", "signature": "(self, player: str)", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "create_game", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-fullstack-application-285ba9d3/tic_tac_backend/src/api/game_logic.py", "pattern": "/^    def create_game(self) -> Game:$/", "language": "Python", "typeref": "typename:Game", "kind": "member", "signature": "(self)", "scope": "GameStore", "scopeKind": "class"}, {"_type": "tag", "name": "get_game", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-fullstack-application-285ba9d3/tic_tac_backend/src/api/game_logic.py", "pattern": "/^    def get_game(self, game_id: str) -> Optional[Game]:$/", "language": "Python", "typeref": "typename:Optional[Game]", "kind": "member", "signature": "(self, game_id: str)", "scope": "GameStore", "scopeKind": "class"}, {"_type": "tag", "name": "list_games", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-fullstack-application-285ba9d3/tic_tac_backend/src/api/game_logic.py", "pattern": "/^    def list_games(self) -> List[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:List[Dict[str,Any]]", "kind": "member", "signature": "(self)", "scope": "GameStore", "scopeKind": "class"}, {"_type": "tag", "name": "make_move", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-fullstack-application-285ba9d3/tic_tac_backend/src/api/game_logic.py", "pattern": "/^    def make_move(self, row: int, col: int) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self, row: int, col: int)", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "new_board", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-fullstack-application-285ba9d3/tic_tac_backend/src/api/game_logic.py", "pattern": "/^def new_board() -> List[List[str]]:$/", "language": "Python", "typeref": "typename:List[List[str]]", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "store", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-fullstack-application-285ba9d3/tic_tac_backend/src/api/game_logic.py", "pattern": "/^store = GameStore()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "to_dict", "path": "/home/kavia/workspace/code-generation/tic-tac-toe-fullstack-application-285ba9d3/tic_tac_backend/src/api/game_logic.py", "pattern": "/^    def to_dict(self) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "member", "signature": "(self)", "scope": "Game", "scopeKind": "class"}], "hash": "078d4ab0d3ec79617c3362984c52458b", "format-version": 4, "code-base-name": "tic_tac_backend", "filename": "tic_tac_backend/src/api/game_logic.py", "fields": [{"name": "store = GameStore()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"21": ""}]}